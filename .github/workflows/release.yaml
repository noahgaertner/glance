name: Create release

permissions:
  contents: write
  packages: write

on:
  push:
    tags:
      - 'v*-freshrss'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the target Git reference
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Golang
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: release

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ github.repository_owner }}/glance
            ghcr.io/${{ github.repository_owner }}/glance
          tags: |
            type=raw,value=latest
            type=raw,value=freshrss
            type=match,pattern=v(.*)-freshrss,group=1,value=v$1-freshrss
            type=match,pattern=v([0-9]+\.[0-9]+)\..*-freshrss,group=1,value=v$1-freshrss

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.freshrss
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
